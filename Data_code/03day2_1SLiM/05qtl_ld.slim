// set up a simple neutral simulation
initialize() {
	if (exists("slimgui")){
		defineConstant("rep",1);
	}
	len_2L=21080001;
	len_2R=18980001;
	len_3L=22280001;
	len_3R=26970000;
	
	chrom_len=len_2L+len_2R+len_3L+len_3R;
	defineConstant("Seed_number",getSeed());
	//defineConstant("positions",c(0:98));
	initializeMutationRate(0);
	initializeSex("A");
	
	// m1 mutation type: neutral
	initializeMutationType("m1", 0.5, "f", 0.0);
	m1.convertToSubstitution=F;
	
	// g1 genomic element type: uses m1 for all mutations
	initializeGenomicElementType("g1", m1, 1.0);
	
	// uniform chromosome of length 100 kb with uniform recombination
	initializeGenomicElement(g1, 0, chrom_len);
	map=readCSV("materials/rec_map_slim.txt",c("ends","rates"),sep="\t");
	ends=map.getValue("ends");
	rates=map.getValue("rates")*1e-8;
	initializeRecombinationRate(rates, ends);
}

// create a population of 300 individuals
1 late() {
	sim.addSubpop("p1", 189);
	p1.genomes.readFromVCF("materials/189haplo_LD.vcf", mutationType=m1);
	variants=sim.mutations.position;
	defineGlobal("variants",variants);
	//set selection coefficient
	//for (mut in sim.mutations){
	//	mut.setSelectionCoeff(0.059);
	//}
	defineGlobal("af_f0",sim.mutationFrequencies(p1));
	
	p1.setSubpopulationSize(300);
	
	p1Counts_f0=integer(length(variants));
	for (indv in p1.individuals){
		ind_list=match(indv.genomes.positionsOfMutationsOfType(m1),variants);
		p1Counts_f0 = p1Counts_f0+integer(length(p1Counts_f0),0,1,ind_list);
	}
	defineGlobal("p1Counts_f0",p1Counts_f0);

}

mutationEffect(m1) {
	return 1.0;
}

1: late(){
	inds=p1.individuals;
	phenotypes = inds.sumOfMutationsOfType(m1);
	fintess_mean=1.3;
	fitness_sd=1.2;
	scale = dnorm(fintess_mean, fintess_mean, fitness_sd);
	inds.fitnessScaling = 0.5 + 1*dnorm(phenotypes, fintess_mean, fitness_sd)/scale;
	if (sim.cycle %10 ==1 | sim.cycle==1){
		print((sim.cycle-1)+"  "+mean(phenotypes)+" "+mean(inds.fitnessScaling));
	}
}

61 late(){
	p1Counts_f60=integer(length(variants));
	for (indv in p1.individuals){
		ind_list=match(indv.genomes.positionsOfMutationsOfType(m1),variants);
		p1Counts_f60 = p1Counts_f60+integer(length(p1Counts_f60),0,1,ind_list);
	}
	filename=paste0("05qtl_ld/rep",rep,".txt");
	writeFile(filename,"Pos\tF0_freq\tF60_freq");
	for (i in 0:(length(p1Counts_f60)-1)){
		writeFile(filename,paste((variants[i]+1),p1Counts_f0[i]/300,p1Counts_f60[i]/300,sep="\t"), append=T);
	}
	seed_file="05qtl_ld_seed.log";
	writeFile(seed_file,paste0("Rep",rep,"\t",Seed_number), append =T);

}
